// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//auth
model User {
  id  String     @id @default(uuid())
  email String  @unique
  password  String
  name  String
  role Int @default(1)
  phone String
  sessions  Session[]
  passwordResetTokens  PasswordResetToken[]
  orders Order[]
  orderStatuses OrderStatus[]
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}

//domain
model Client {
  id String  @id @default(uuid())
  name String
  shortName String
  email String @unique
  phone String @unique
  orders Order[]
}


model Destination {
  id String  @id @default(uuid())
  country String
  address String
  postalCode String
  city String
  orders Order[]

  @@unique([country, city, postalCode, address])
}

model Product {
  id String  @id @default(uuid())
  name String
  dimensions String
  variant String //variant of product (black, white_(wet|dry))
  itemsPerPackage Int //number of items per package
  volumePerPackage Decimal //m^3 per package

  stock Int
  orders ProductOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, dimensions, variant, itemsPerPackage])
}

model OrderStatus {
  id String  @id @default(uuid())
  status String @default("created")
  date DateTime @default(now())
  creator User @relation(fields: [creatorId], references: [id])
  creatorId String
  orders Order @relation(fields: [orderId], references: [id])
  orderId Int
}

model Order{
  id Int  @id @default(autoincrement())
  client Client @relation(fields: [clientId], references: [id])
  clientId String
  destination Destination @relation(fields: [destinationId], references: [id])
  destinationId String
  date DateTime @default(now())
  statusHistory OrderStatus[]
  files String[] @default([])
  products ProductOrder[]
  creator User @relation(fields: [creatorId], references: [id])
  creatorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductOrder {
  id String  @id @default(uuid())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId String
  quantity Int
  price Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
